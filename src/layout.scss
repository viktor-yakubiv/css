@use 'lib/layout' as *;

/**
 * Stack
 *
 * Sets the vertical spacing between its children.
 *
 * Details: https://every-layout.dev/layouts/stack
 */
.stack {
  @include stack;
}

/**
 * Box
 *
 * Defines a box layout with inset spacing.
 *
 * Details: https://every-layout.dev/layouts/box
 *
 * NOTE:
 *   This does not apply background, color and outline
 *   recommended in Every Layout as these are defined in a separate
 *   coloring module.
 */
.box {
  @include box;
}

/**
 * Cluster
 *
 * Sets children to lay horizontally. If there is not enough space to fit all
 * children, they break into another line. It also sets horizontal and vertical
 * spacing between children.
 *
 * Details: https://every-layout.dev/layouts/cluster
 */
.cluster {
  @include cluster;
}

/**
 * Sidebar
 *
 * Makes the sidebar to occupy requested space and the content (not a sidebar)
 * to occupy the rest of space, i.e. creates wide content and a narrow sidebar.
 * If there is not enough space for content, i.e. it is more narrow than 50%
 * of the parent, the layout breaks and the sidebar is rendered before
 * or after the content (depends on the order of HTML elements).
 *
 * Details: https://every-layout.dev/layouts/sidebar
 */
.sidebar {
  @include sidebar;
}

/**
 * Switcher
 *
 * Details: https://every-layout.dev/layouts/switcher
 */
.switcher {
  @include switcher;
}


/**
 * Icon
 *
 * A layout designed specifically to inline pictograms to make them
 * aligned with text properly.
 *
 * Configuration options:
 * `--icon-size` for the full size of image
 *
 * `--outset` enables negative margin making the picture pop a bit out
 *   from text
 *
 *  `--space` controls space between the icon and the closes text;
 *    In JSX it would be complete space, in pure HTML it can be added to
 *    the space width.
 *
 * Details: https://every-layout.dev/layouts/icon
 */
.icon {
  @include icon;
}

/**
 * Visually hidden
 *
 * Hides the element for visual users but preserves it accessible
 * for assistive technologies, e.g. screen readers.
 */
.hidden:where(.visually) {
  @include visually-hidden;
}

.hidden:where(.visually.focusable) {
  @include visually-hidden($focusable: true);
}
